<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="1" total="3" passed="1">
  <reporter-output>
    <line>
      <![CDATA[Test Case Name - AQA TC002 - Notification Fail Test]]>
    </line>
    <line>
      <![CDATA[Test Verification: verify that the application is launched is PASS
]]>
    </line>
    <line>
      <![CDATA[Test Verification: verify that Notifications switch is on is PASS
]]>
    </line>
    <line>
      <![CDATA[Test Verification: verify notifications message is PASS
]]>
    </line>
    <line>
      <![CDATA[Test Verification: verify that Notifications switch is off is PASS
]]>
    </line>
    <line>
      <![CDATA[Test Verification: verify notifications message is FAIL
]]>
    </line>
    <line>
      <![CDATA[<a href="D:/Task/target/reports/TestRunID_20210625104612/screenshots/NFT005_20210625104701.png"><p align="left">Error screenshot at Fri Jun 25 10:47:01 IST 2021</p>]]>
    </line>
    <line>
      <![CDATA[<p><img width="1024" src="D:\Task\target\reports\TestRunID_20210625104612\screenshots\NFT005_20210625104701.png" alt="screenshot at Fri Jun 25 10:47:01 IST 2021"/></p></a><br />]]>
    </line>
    <line>
      <![CDATA[Test Case Name - AQA TC001 - Notification Pass Test]]>
    </line>
    <line>
      <![CDATA[Test Verification: verify that the application is launched is PASS
]]>
    </line>
    <line>
      <![CDATA[Test Verification: verify that Notifications switch is on is PASS
]]>
    </line>
    <line>
      <![CDATA[Test Verification: verify notifications message is PASS
]]>
    </line>
    <line>
      <![CDATA[Test Verification: verify that Notifications switch is off is PASS
]]>
    </line>
    <line>
      <![CDATA[Test Verification: verify notifications message is PASS
]]>
    </line>
  </reporter-output>
  <suite name="Regression" duration-ms="78520" started-at="2021-06-25T10:46:12 IST" finished-at="2021-06-25T10:47:31 IST">
    <groups>
    </groups>
    <test name="RegressionTest" duration-ms="78520" started-at="2021-06-25T10:46:12 IST" finished-at="2021-06-25T10:47:31 IST">
      <class name="com.wired.get.regression.AndroidTest">
        <test-method status="PASS" signature="caseSetUp(java.lang.reflect.Method)[pri:0, instance:com.wired.get.regression.AndroidTest@54bff557]" name="caseSetUp" is-config="true" duration-ms="22023" started-at="2021-06-25T10:46:28 IST" finished-at="2021-06-25T10:46:50 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.wired.get.regression.AndroidTest.notificationFailTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- caseSetUp -->
        <test-method status="FAIL" signature="notificationFailTest()[pri:0, instance:com.wired.get.regression.AndroidTest@54bff557]" name="notificationFailTest" duration-ms="12155" started-at="2021-06-25T10:46:50 IST" finished-at="2021-06-25T10:47:02 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
 :Test Verification Name: verify notifications message ;
 :FAIL: Desired Element Text Not Displayed ;
 :expected: TestFail - You will not receive alerts from Wired. ;
:screenshot: D:\Task\target\reports\TestRunID_20210625104612\screenshots\NFT005_20210625104701.png
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
 :Test Verification Name: verify notifications message ;
 :FAIL: Desired Element Text Not Displayed ;
 :expected: TestFail - You will not receive alerts from Wired. ;
:screenshot: D:\Task\target\reports\TestRunID_20210625104612\screenshots\NFT005_20210625104701.png

at org.testng.Assert.fail(Assert.java:99)
at com.wired.get.regression.AndroidTest.notificationFailTest(AndroidTest.java:148)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Test Case Name - AQA TC002 - Notification Fail Test]]>
            </line>
            <line>
              <![CDATA[Test Verification: verify that the application is launched is PASS
]]>
            </line>
            <line>
              <![CDATA[Test Verification: verify that Notifications switch is on is PASS
]]>
            </line>
            <line>
              <![CDATA[Test Verification: verify notifications message is PASS
]]>
            </line>
            <line>
              <![CDATA[Test Verification: verify that Notifications switch is off is PASS
]]>
            </line>
            <line>
              <![CDATA[Test Verification: verify notifications message is FAIL
]]>
            </line>
            <line>
              <![CDATA[<a href="D:/Task/target/reports/TestRunID_20210625104612/screenshots/NFT005_20210625104701.png"><p align="left">Error screenshot at Fri Jun 25 10:47:01 IST 2021</p>]]>
            </line>
            <line>
              <![CDATA[<p><img width="1024" src="D:\Task\target\reports\TestRunID_20210625104612\screenshots\NFT005_20210625104701.png" alt="screenshot at Fri Jun 25 10:47:01 IST 2021"/></p></a><br />]]>
            </line>
          </reporter-output>
        </test-method> <!-- notificationFailTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.wired.get.regression.AndroidTest@54bff557]" name="afterMethod" is-config="true" duration-ms="1214" started-at="2021-06-25T10:47:02 IST" finished-at="2021-06-25T10:47:03 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="caseSetUp(java.lang.reflect.Method)[pri:0, instance:com.wired.get.regression.AndroidTest@54bff557]" name="caseSetUp" is-config="true" duration-ms="14534" started-at="2021-06-25T10:47:03 IST" finished-at="2021-06-25T10:47:18 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.wired.get.regression.AndroidTest.notificationPassTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- caseSetUp -->
        <test-method status="PASS" signature="notificationPassTest()[pri:0, instance:com.wired.get.regression.AndroidTest@54bff557]" name="notificationPassTest" duration-ms="12095" started-at="2021-06-25T10:47:18 IST" finished-at="2021-06-25T10:47:30 IST">
          <reporter-output>
            <line>
              <![CDATA[Test Case Name - AQA TC001 - Notification Pass Test]]>
            </line>
            <line>
              <![CDATA[Test Verification: verify that the application is launched is PASS
]]>
            </line>
            <line>
              <![CDATA[Test Verification: verify that Notifications switch is on is PASS
]]>
            </line>
            <line>
              <![CDATA[Test Verification: verify notifications message is PASS
]]>
            </line>
            <line>
              <![CDATA[Test Verification: verify that Notifications switch is off is PASS
]]>
            </line>
            <line>
              <![CDATA[Test Verification: verify notifications message is PASS
]]>
            </line>
          </reporter-output>
        </test-method> <!-- notificationPassTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.wired.get.regression.AndroidTest@54bff557]" name="afterMethod" is-config="true" duration-ms="1295" started-at="2021-06-25T10:47:30 IST" finished-at="2021-06-25T10:47:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.wired.get.regression.AndroidTest -->
    </test> <!-- RegressionTest -->
  </suite> <!-- Regression -->
</testng-results>
